{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/comments": {
            "get": {
                "description": "Get comments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get comments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/final_project_hacktiv8_modules_comments_dto.Response"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Create a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_comments_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ResponseInsert"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/comments/:commentID": {
            "put": {
                "description": "Update a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_comments_dto.ResponseUpdate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the comment",
                        "name": "commentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "description": "GetPhotos a photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "GetPhotos a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.ResponseGet"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create new photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Create new photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_photos_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_photos_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photos/:photoID": {
            "delete": {
                "description": "Delete a photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Delete a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the photo",
                        "name": "photoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "$ref": "#/definitions/helpers.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/photos/{id}": {
            "put": {
                "description": "Update a photo by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Update a photo by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_photos_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_photos_dto.ResponseUpdate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/socialmedias": {
            "get": {
                "description": "Get all social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Get all social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ResponseListWrapper"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Create new social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_socialMedias_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_socialMedias_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/socialmedias/:socialmediaid": {
            "put": {
                "description": "Update by id social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Update by id social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the social media",
                        "name": "socialmediaid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_socialMedias_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_socialMedias_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete by id social media",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedias"
                ],
                "summary": "Delete by id social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the social media",
                        "name": "socialmediaid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_socialMedias_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExampleRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_users_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer + user token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ExampleResponseDelete"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorization",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ResponseLogin"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/final_project_hacktiv8_modules_users_dto.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/final_project_hacktiv8_modules_users_dto.Response"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "409": {
                        "description": "data conflict, like email already exist",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "$ref": "#/definitions/helpers.ExampleErrorResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ExampleRequestUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "username": {
                    "type": "string",
                    "example": "jhondoe"
                }
            }
        },
        "dto.ExampleResponseDelete": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your account has been successfully deleted"
                }
            }
        },
        "dto.RequestLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "dto.RequestUpdate": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A Photo"
                }
            }
        },
        "dto.ResponseGet": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "Beautiful Photo"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://example.com/photo.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "test@example.com"
                        },
                        "username": {
                            "type": "string",
                            "example": "jhondoe"
                        }
                    }
                }
            }
        },
        "dto.ResponseInsert": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "A Photo"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ResponseList": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "jhondoe"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://example.com/url"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 1
                        },
                        "profile_image_url": {
                            "type": "string",
                            "example": "https://example.com/photo.jpg"
                        },
                        "username": {
                            "type": "string",
                            "example": "jhondoe"
                        }
                    }
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.ResponseListWrapper": {
            "type": "object",
            "properties": {
                "social_medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ResponseList"
                    }
                }
            }
        },
        "dto.ResponseLogin": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJxd2Vxd2..."
                }
            }
        },
        "final_project_hacktiv8_modules_comments_dto.Request": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A Photo"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "final_project_hacktiv8_modules_comments_dto.Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "photo": {
                    "type": "object",
                    "properties": {
                        "caption": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "photo_url": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "user_id": {
                            "type": "integer"
                        }
                    }
                },
                "photo_id": {
                    "type": "integer"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "final_project_hacktiv8_modules_comments_dto.ResponseUpdate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "A Photo"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "final_project_hacktiv8_modules_photos_dto.Request": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "Beautiful Photo"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://example.com/photo.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo"
                }
            }
        },
        "final_project_hacktiv8_modules_photos_dto.Response": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "Beautiful Photo"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://example.com/photo.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Photo"
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "final_project_hacktiv8_modules_photos_dto.ResponseUpdate": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "final_project_hacktiv8_modules_socialMedias_dto.Request": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "social_media_url": {
                    "type": "string"
                }
            }
        },
        "final_project_hacktiv8_modules_socialMedias_dto.Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "social_media_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "final_project_hacktiv8_modules_users_dto.Request": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 23
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "jhondoe"
                }
            }
        },
        "final_project_hacktiv8_modules_users_dto.Response": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 23
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-11-03T01:52:41.035Z"
                },
                "username": {
                    "type": "string",
                    "example": "jhondoe"
                }
            }
        },
        "helpers.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "errors": {},
                "status": {
                    "type": "integer"
                }
            }
        },
        "helpers.ExampleErrorResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "cannot be blank"
                },
                "message": {
                    "type": "string",
                    "example": "user bad request"
                },
                "password": {
                    "type": "string",
                    "example": "cannot be blank"
                }
            }
        }
    }
}